"""
Django settings for blhserver project.

Generated by 'django-admin startproject' using Django 4.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
from celery.schedules import crontab
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-tr^7!-+d(j@gp(asl-cabplf+t*use@-*auz+cs_!ivp*e&jy2'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

# 添加第三方库
INSTALLED_APPS.extend([
    'rest_framework',
    'rest_framework.authtoken',
    'werkzeug_debugger_runserver',
    'django_extensions',
])

# 自定义应用
INSTALLED_APPS.extend([
    'applications.kwaixiaodian.apps.KwaixiaodianConfig',
    'applications.goods.apps.GoodsConfig',
    'applications.user.apps.UserConfig'
])


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'blhserver.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'blhserver.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'blhshop',
        'USER': 'blhshop',
        'PASSWORD': os.environ.get('DEFAULT_MYSQL_PWD', '2T69GFhgAekaTkPt'),
        'HOST': os.environ.get('DEFAULT_MYSQL_HOST', '120.48.114.141'),
        'PORT': os.environ.get('DEFAULT_MYSQL_PORT', '33061'),
    },
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'zh-hans'  # 中文

TIME_ZONE = 'Asia/Shanghai'  # 时区

USE_I18N = True

USE_TZ = False

AUTH_USER_MODEL = 'user.User'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
        # 'rest_framework.permissions.IsAdminUser',
    ),
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',  # json渲染器
    ),
    'DEFAULT_PARSER_CLASSES': (
        'rest_framework.parsers.JSONParser',  # 解析成功后，request.data类型为dict
    ),
}


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

# 静态文件配置
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, "static")

# 文件存储配置
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')  # 默认根目录

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

########################################################################################################
# SSL配置
########################################################################################################
# SECURE_SSL_REDIRECT = True


########################################################################################################
# Reids配置
########################################################################################################
# reids配置
REDIS_HOST = os.environ.get("DEFAULT_REDIS_HOST", '120.48.114.141')
REDIS_PORT = os.environ.get("DEFAULT_REDIS_PORT", '6379')
REDIS_DEFAULT_DB = 0
REDIS_SESSION_DB = 1
REDIS_BROKER_DB = 2
REDIS_MAX_CONN = 8
REDIS_PW = os.environ.get("DEFAULT_REDIS_PWD", "123456")
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": f"redis://{REDIS_HOST}:{REDIS_PORT}/{REDIS_DEFAULT_DB}",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            "CONNECTION_POOL_KWARGS": {
                "decode_responses": True
            },
            "PASSWORD": REDIS_PW
        },
    },
}


########################################################################################################
# Celery配置
########################################################################################################
CELERY_TIMEZONE = TIME_ZONE
BROKER_URL = f"redis://:{REDIS_PW}@{REDIS_HOST}:{REDIS_PORT}/{REDIS_BROKER_DB}"
CELERY_RESULT_BACKEND = f"redis://:{REDIS_PW}@{REDIS_HOST}:{REDIS_PORT}/{REDIS_BROKER_DB}"
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TASK_RESULT_EXPIRES = 60 * 60 * 24
CELERYBEAT_SCHEDULE = {
    'kwaixiaodian_refresh_token': {
        'task': 'applications.kwaixiaodian.tasks.refresh_token',
        'schedule': crontab(minute=0, hour=0)
    },
    'save_goods': {
        'task': 'applications.goods.tasks.save_goods',
        'schedule': crontab(minute='*/30')
    }
}

########################################################################################################
# 快手电商平台配置
########################################################################################################
KWAIXIAODIAN_HOST = "https://open.kwaixiaodian.com"
KWAIXIAODIAN_API_HOST = "https://openapi.kwaixiaodian.com"
KUAISHOU_HOST = "https://open.kuaishou.com"
KWAIXIAODIAN_OAUTH2_AUTHORIZE_URL = "https://wxamp.blhlm.com/rest/1.0/kwaixiaodian/v1/oauth2/access_token"
KWAIXIAODIAN_APP_ID = "ks686517468460941728"
KWAIXIAODIAN_APP_SECRET = "8_jgQcgFCYLJGO-lrAD4Mg"
KWAIXIAODIAN_SIGN_SECRET = "48c8f5d9c8c70facbd84e00fbace5f5a"
KWAIXIAODIAN_REDIRECT_URI = "https://wxamp.blhlm.com/kwaixiaodian/oauth2/authorize"
KWAIXIAODIAN_SCOPE = "merchant_distribution"
KWAIXIAODIAN_RESPONSE_TYPE = "code"
KWAIXIAODIAN_GRANT_TYPE = "code"
KWAIXIAODIAN_SIGN_METHOD = "MD5"


# 微信平台
WXAMP_JSON2SEESSION_URL = "https://api.weixin.qq.com/sns/jscode2session"
WXAMP_APPID = "wxc765eade2733bee1"
WXAMP_SECRET = "b26c90b165a575f78beb1f1ac7f044ba"
WXAMP_GRANT_TYPE = "authorization_code"
